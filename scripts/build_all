#!/bin/sh
set -eu

DIR_BASE="$(git rev-parse --show-toplevel)"
CMAKE_BLD_DIR="${DIR_BASE}/build-multi"
CMAKE_SRC_DIR="${DIR_BASE}"
CMAKE_GENERATOR="Ninja"
REBUILD=0

run_build(){
	compiler="${1}"
	library="${2}"
	build_type="${3}"
    extra_args="${4:-}"
	build_name="${compiler}-${library}-${build_type}${extra_args:+-sanitize}"
	build_dir="${CMAKE_BLD_DIR}/${build_name}"
	if ! [ -f "${CMAKE_BLD_DIR}" ]; then
		# shellcheck disable=SC2086 # We want the args to expand
		cmake \
            -DCMAKE_CXX_COMPILER="${compiler}" \
            -DCMAKE_BUILD_TYPE="${build_type}" \
            -DCMAKE_CXX_FLAGS="${extra_args}" \
            -S "${CMAKE_SRC_DIR}" \
            -G "${CMAKE_GENERATOR}" \
            -B "${build_dir}"
	fi
	cmake --build "${build_dir}"
	ctest --test-dir "${build_dir}" --output-junit "${build_dir}-junit.xml"
    mkdir -p "${build_dir}/cppcheck"
    cppcheck \
        --xml --xml-version=2 \
        --cppcheck-build-dir="${build_dir}/cppcheck" \
        --check-level=exhaustive \
        --enable=all \
        --project="${build_dir}/compile_commands.json" \
        --language=c++ \
        2> "${build_dir}-cppcheck.xml"
}

if [ "${REBUILD}" -eq 1 ]; then
	rm -rf "${CMAKE_BLD_DIR}";
fi

run_build "clang++" "libstdc++" "Debug"
run_build "clang++" "libstdc++" "Debug" "-fsanitize=address -fsanitize=undefined"
run_build "clang++" "libstdc++" "Release"
run_build "g++"     "libstdc++" "Debug"
run_build "g++"     "libstdc++" "Release"
