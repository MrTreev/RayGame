function(raygame_core_lib _target)
    set(options)
    set(oneValueArgs)
    set(multiValueArgs SOURCES HEADERS PUBLIC_DEPENDS PRIVATE_DEPENDS)
    cmake_parse_arguments(RAYGAME_COREARGS "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
    add_library(${_target})
    raygame_add_args(${_target})
    raygame_add_defs(${_target})
    set_target_properties(${_target} PROPERTIES LINKER_LANGUAGE CXX)
    target_sources(${_target} PUBLIC ${RAYGAME_COREARGS_HEADERS})
    target_sources(${_target} PRIVATE ${RAYGAME_COREARGS_SOURCES})
    target_include_directories(${_target} INTERFACE ${RAYGAME_PATH_SRC})
    target_link_libraries(${_target} PUBLIC ${RAYGAME_COREARGS_PUBLIC_DEPENDS})
    target_link_libraries(${_target} PRIVATE ${RAYGAME_COREARGS_PRIVATE_DEPENDS})
    add_library(RayGame::Core::${_target} ALIAS ${_target})
endfunction()

add_subdirectory(base)
add_subdirectory(math)
add_subdirectory(drawing)
add_subdirectory(window)

add_library(Core)
raygame_add_args(Core)
raygame_add_defs(Core)
target_include_directories(Core INTERFACE ${RAYGAME_PATH_SRC})
target_link_libraries(Core PUBLIC RayGame::Core::Base RayGame::Core::Math RayGame::Core::Drawing RayGame::Core::Window)
add_library(RayGame::Core ALIAS Core)
