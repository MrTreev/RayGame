function(rg_test _target)
    set(options)
    set(oneValueArgs)
    set(multiValueArgs SOURCES DEPENDS)
    cmake_parse_arguments(RG_TESTARGS "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
    add_executable(Test${_target})
    target_compile_options(Test${_target} PRIVATE -Wno-unsafe-buffer-usage)
    target_link_libraries(Test${_target} PUBLIC ${RG_DEPENDS})
    target_link_libraries(Test${_target} PUBLIC doctest)
    target_sources(Test${_target} PUBLIC ${RG_TESTARGS_SOURCES})
    rg_add_args(Test${_target})
    add_test(NAME Test${_target} COMMAND Test${_target})
endfunction()

if(RG_TEST_ENABLE)
    add_executable(RayGameTest)
    target_compile_options(RayGameTest PRIVATE -Wno-unsafe-buffer-usage)
    target_link_libraries(RayGameTest PUBLIC Core)
    target_link_libraries(RayGameTest PUBLIC doctest)
    target_sources(RayGameTest PUBLIC main.cpp math.cpp test.cpp)
    rg_add_args(RayGameTest)
    add_test(NAME RayGameTest COMMAND RayGameTest)
endif()

# rg_test(Math SOURCES main.cpp math.cpp DEPENDS Core)
